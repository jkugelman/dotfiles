#!/bin/bash -e

main() {
    if (($# > 0)); then
        echo "Usage: grep -Hn <files> | $0" >&2
        exit 1
    fi

    LINES=$(mktemp)
    trap 'rm "$LINES"' EXIT
    cat > "$LINES"

    if ! isGrepOutput "$LINES"; then
        badFile "$LINES"
        exit 1
    fi

    edit "$LINES" || return

    while ! isGrepOutput "$LINES"; do
        badFile "$LINES"
        echo >&2
        read -p 'Press enter to continue.'

        edit "$LINES" || return
    done

    local l
    while IFS= read -r l; do
        local file=$(cut -d: -f1  <<< "$l")
        local line=$(cut -d: -f2  <<< "$l")
        local text=$(cut -d: -f3- <<< "$l")

        replaceLine "$file" "$line" "$text"
    done < "$LINES"
}

edit() {
    [[ -n VISUAL ]] && { "$VISUAL" "$@" < /dev/tty > /dev/tty; return; }
    [[ -n EDITOR ]] && { "$EDITOR" "$@" < /dev/tty > /dev/tty; return; }

    echo 'Neither of the environment variables VISUAL or EDITOR are set.' >&2
    exit 1
}

isGrepOutput() {
    ! grep -qv '.*:.*:.*' "$@"
}

badFile() {
    local file=$1

    echo "Output in unexpected format. Expected file:line:text." >&2
    echo >&2
    grep -v '.*:.*:.*' "$file" | head -20 >&2
}

replaceLine() {
    local file=$1
    local line=$2
    local text=$3

    local oldText=$(sed -n "${line}p" "$file")
    [[ $oldText == "$text" ]] && return

    echo -n "$file:$line:"; deleted;  echo "-$oldText"; plain
    echo -n "$file:$line:"; inserted; echo "+$text";    plain

    awk -v N="$line" -v T="$(escape "$text")" 'NR==N {$0=T} 1' "$file" > "$file.tmp.$$"
    cat "$file.tmp.$$" > "$file"
    rm "$file.tmp.$$"
}

deleted () { if [[ -t 1 ]]; then tput setaf 1; fi; }
inserted() { if [[ -t 1 ]]; then tput setaf 2; fi; }
plain   () { if [[ -t 1 ]]; then tput sgr0;    fi; }

escape() {
    sed 's/\\/\\\\/g' <<< "$1"
}

main "$@"
